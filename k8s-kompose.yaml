apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.service.type: LoadBalancer
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: frontend
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: redis-master
    name: redis-master
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis-master
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: redis-slave
    name: redis-slave
  spec:
    ports:
    - name: "6379"
      port: 6379
      targetPort: 6379
    selector:
      io.kompose.service: redis-slave
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.service.type: LoadBalancer
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - env:
          - name: GET_HOSTS_FROM
            value: dns
          image: gcr.io/google-samples/gb-frontend:v4
          name: frontend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: redis-master
    name: redis-master
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis-master
      spec:
        containers:
        - image: k8s.gcr.io/redis:e2e
          name: redis-master
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\Users\ofek.lev\bin\kompose.exe convert -f docker-compose.yaml
        --out k8s-kompose.yaml
      kompose.version: 1.16.0 (0c01309)
    creationTimestamp: null
    labels:
      io.kompose.service: redis-slave
    name: redis-slave
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: redis-slave
      spec:
        containers:
        - env:
          - name: GET_HOSTS_FROM
            value: dns
          image: gcr.io/google_samples/gb-redisslave:v1
          name: redis-slave
          ports:
          - containerPort: 6379
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}

